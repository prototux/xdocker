#!/usr/bin/env bash

## Parameters
if [[ -n "$1" ]]; then
	APP="xdocker-$1"
	TTYARG="-t"
	shift
else
	APP="xbase"
	TTYARG="-it"
fi

## Base vars
OPTS="--rm --network=host $TTYARG"
GPGAGENT=$(gpgconf --list-dirs | grep agent-socket | cut -d':' -f2)

## Check if the app config file exists, and load it if it does
if [[ -f $XDG_CONFIG_HOME/xdocker/$APP ]]; then
	source $XDG_CONFIG_HOME/xdocker/$APP
fi

## Optionnal flags
[[ $OTPS_X11 == "true" ]] && OPTS+=" -v /tmp/.X11-unix:/tmp/.X11-unix -v $HOME/.Xauthority:$HOME/.Xauthority -e DISPLAY=$DISPLAY"
[[ $OPTS_SOUND == "true" ]] && OPTS+=" -v $XDG_RUNTIME_DIR/pulse:/tmp/pulse"
[[ $OPTS_DL == "true" ]] && OPTS+=" -v $HOME/Downloads:$HOME/Downloads"
[[ $OPTS_CONFIG == "true" ]] && OPTS+=" -v $XDG_CONFIG_HOME:$XDG_CONFIG_HOME"
[[ $OPTS_DATA == "true" ]] && OPTS+=" -v $XDG_DATA_HOME:$XDG_DATA_HOME"
[[ $OPTS_DOCS == "true" ]] && OPTS+=" -v $HOME/Documents:$HOME/Documents"
[[ $OPTS_MOUNTS == "true" ]] && OPTS+="-v /mnt:/mnt -v /media:/media"
[[ $OPTS_GPG == "true" ]] && OPTS+=" -v $GPGAGENT:$HOME/.gnupg/S.gpg-agent -v $HOME/.gnupg:$HOME/.gnupg"
[[ $OPTS_PASS == "true" ]] && OPTS+=" -v $HOME/.password-store:$HOME/.password-store"

## Check if the xdocker RC file exists, and add custom options if it does
if [[ -f $XDG_CONFIG_HOME/xdocker/xdocker.rc ]]; then
	while read custopt; do
		VAR=$(echo "$custopt" | cut -d'=' -f1)
		OPT=$(echo "$custopt" | cut -d'=' -f2-)
		[[ "${!VAR}" == "true" ]] && OPTS+=" $(eval echo $OPT)"
	done< <(cat $XDG_CONFIG_HOME/xdocker/xdocker.rc)
fi

## Run docker
docker run $OPTS $DOCKER_ARGS $APP $APP_CMD
